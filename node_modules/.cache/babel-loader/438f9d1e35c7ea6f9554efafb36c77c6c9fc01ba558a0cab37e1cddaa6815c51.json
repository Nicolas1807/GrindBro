{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikic\\\\Desktop\\\\GrindBro\\\\frontend\\\\src\\\\Components\\\\DisplayPlan.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"../styles/DisplayPlan.css\";\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DisplayPlan() {\n  _s();\n  const d = new Date();\n  const [year, setYear] = useState(d.getFullYear());\n  const [month, setMonth] = useState(d.toLocaleString('en-US', {\n    month: 'long',\n    lang: \"eng\"\n  }));\n  const [day, setDate] = useState(d.getDate());\n  const [monthWeekDays, changeMonthWeekDays] = useState([]);\n  const [rowsNum, changeRowsNum] = useState(1);\n  const [tableContent, changeTableContent] = useState();\n  const createTableContent = (rows, weekDays) => {\n    const rowArray = [...Array(rows - 1).keys()];\n    const colArray = [...Array(7).keys()];\n    console.log(weekDays);\n    const Content = rowArray.map(index => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: colArray.map(index => {\n          if (index === weekDays[0]) {\n            weekDays = weekDays.shift();\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 22\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 20\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 19\n      }, this);\n    });\n    return Content;\n  };\n  useEffect(() => {\n    var numOfRows = 1;\n    var lastDay = new Date(year, d.getMonth() + 1, 0).getDate();\n    var weekDays = [];\n    for (var i = 1; i <= lastDay; i++) {\n      const w = new Date(year, d.getMonth(), i);\n      weekDays.push(w.getDay());\n      if (w.getDay() === 0) {\n        numOfRows = numOfRows + 1;\n      }\n      changeRowsNum(numOfRows);\n    }\n    changeTableContent(createTableContent(numOfRows, weekDays));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DisplayPlan\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"monthTitle\",\n        children: month[0].toUpperCase() + month.slice(1) + \" \" + year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"monthCallendar\",\n        children: [rowsNum, /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Monday\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Tuesday\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Wednesday\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Thursday\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Friday\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Saturday\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Sunday\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: tableContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(DisplayPlan, \"U5FrniZg+nsSNOPamHKfUBmyGDk=\");\n_c = DisplayPlan;\nvar _c;\n$RefreshReg$(_c, \"DisplayPlan\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DisplayPlan","_s","d","Date","year","setYear","getFullYear","month","setMonth","toLocaleString","lang","day","setDate","getDate","monthWeekDays","changeMonthWeekDays","rowsNum","changeRowsNum","tableContent","changeTableContent","createTableContent","rows","weekDays","rowArray","Array","keys","colArray","console","log","Content","map","index","children","shift","fileName","_jsxFileName","lineNumber","columnNumber","numOfRows","lastDay","getMonth","i","w","push","getDay","className","toUpperCase","slice","_c","$RefreshReg$"],"sources":["C:/Users/mikic/Desktop/GrindBro/frontend/src/Components/DisplayPlan.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport \"../styles/DisplayPlan.css\";\r\nimport { useEffect } from 'react';\r\n\r\n\r\n\r\n\r\nexport default function DisplayPlan() {\r\n\r\n  const d = new Date()\r\n  const [year, setYear] = useState(d.getFullYear())\r\n  const [month, setMonth] = useState(d.toLocaleString('en-US', { month: 'long', lang: \"eng\" }))\r\n  const [day, setDate] = useState(d.getDate())\r\n  const [monthWeekDays, changeMonthWeekDays] = useState([])\r\n  const [rowsNum, changeRowsNum] = useState(1)\r\n  const [tableContent, changeTableContent] = useState()\r\n\r\n\r\n  const createTableContent = (rows, weekDays) => {\r\n    const rowArray = [...Array(rows-1).keys()]\r\n    const colArray = [...Array(7).keys()]\r\n    console.log(weekDays)\r\n    const Content = (\r\n        rowArray.map((index) => {\r\n          return (<tr>\r\n          {colArray.map((index) => {\r\n            if(index === weekDays[0])\r\n            {\r\n              weekDays = weekDays.shift()\r\n              return <td>1</td>\r\n            }\r\n            else\r\n            {\r\n            return <td>2</td>\r\n            }\r\n          })}</tr>)\r\n        })\r\n    )\r\n    return Content\r\n  }\r\n\r\n  useEffect(()=>{\r\n    var numOfRows = 1\r\n    var lastDay = new Date(year, d.getMonth()+1, 0).getDate()\r\n    var weekDays = []\r\n    for(var i = 1; i<= lastDay; i++){\r\n      const w = new Date(year, d.getMonth(), i)\r\n      weekDays.push(w.getDay())\r\n      if(w.getDay()===0)\r\n      {\r\n        numOfRows = numOfRows+1\r\n      } \r\n      changeRowsNum(numOfRows)   \r\n    }\r\n  \r\n\r\n    changeTableContent(createTableContent(numOfRows, weekDays))\r\n    \r\n\r\n  }, [])\r\n  \r\n\r\n  return (\r\n\r\n    <div className='DisplayPlan'>\r\n         <div className='panel'>\r\n          <div className='monthTitle'>{month[0].toUpperCase() + month.slice(1,) + \" \" + year}</div>\r\n          <div className='monthCallendar'>\r\n          {rowsNum}\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <td>Monday</td>\r\n                <td>Tuesday</td>\r\n                <td>Wednesday</td>\r\n                <td>Thursday</td>\r\n                <td>Friday</td>\r\n                <td>Saturday</td>\r\n                <td>Sunday</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {tableContent}\r\n            </tbody>\r\n          </table>\r\n          </div>\r\n         </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}